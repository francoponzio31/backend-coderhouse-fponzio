paths:
  /api/products:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        "200":
          description: All products
        "500":
          description: Server error
        "400":
          description: Some data is missing
    post:
      summary: Create product
      tags:
        - Products
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createProduct"
      responses:
        "200":
          description: Product created
          content:
            application/json:
              schemas:
                $ref: "#components/schemas/Product"
              example:
                title: "product 1"
                description: "product 1"
                code: "1"
                price: 20
                status: true
                stock: 7
                category: "category 1"
                thumbnails: []
                owner: "admin"
        "500":
          description: Server error
        "400":
          description: Some data is missing
  /api/products/{id}:
    get:
      summary: Get product by id
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: Product identifier
          schema:
            $type: String
      responses:
        "200":
          description: Product found
          content:
            application/json:
              schemas:
                $ref: "#components/schemas/Product"
              example:
                title: "product 1"
                description: "product 1"
                code: "1"
                price: 20
                status: true
                stock: 7
                category: "category 1"
                thumbnails: []
                owner: "admin"
        "500":
          description: Server error
        "400":
          description: Some data is missing
    put:
      summary: Update product by id
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Product identifier
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/updateProduct"
      responses:
        "200":
          description: Product updated
          content:
            application/json:
              schemas:
                $ref: "#components/schemas/Product"
              example:
                id: "655bf9dccf7cb75b3f3b5706"
                title: "product 2"
                description: "product 2"
                code: "2"
                price: 20
                status: true
                stock: 65
                category: "category 2"
                thumbnails: []
                owner: "admin"
        "500":
          description: Server error
        "400":
          description: Some data is missing
    delete:
      summary: Delete product by id
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          description: Product identifier
      responses:
        "200":
          description: Product deleted
        "500":
          description: Server error
        "400":
          description: Some data is missing

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
        title:
            type: string
        description:
            type: string
        code:
            type: string
        price:
            type: number
        status:
            type: boolean
        stock:
            type: number
        category:
            type: string
        thumbnails:
            type: array
        owner:
            type: string
      example:
        title: "product 1"
        description: "product 1"
        code: "1"
        price: 20
        status: true
        stock: 7
        category: "category 1"
        thumbnails: []
        owner: "admin"

  requestBodies:
    createProduct:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        code:
          type: string
        price:
          type: number
        status:
          type: boolean
        stock:
          type: number
        category:
          type: string
        thumbnails:
          type: array
        owner:
          type: string
      example:
        title: "product 2"
        description: "product 2"
        code: "2"
        price: 20
        status: true
        stock: 65
        category: "category 2"
        thumbnails: []
        owner: "admin"
    updateProduct:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        code:
          type: string
        price:
          type: number
        status:
          type: boolean
        stock:
          type: number
        category:
          type: string
        thumbnails:
          type: array
        owner:
          type: string
      example:
        title: "product 2"
        description: "product 2"
        code: "2"
        price: 20
        status: true
        stock: 65
        category: "category 2"
        thumbnails: []
        owner: "admin"